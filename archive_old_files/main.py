#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–∞—è ERP —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∫—É—Ä—Å–æ–≤–æ–π —Ä–∞–±–æ—Ç—ã
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
"""

import tkinter as tk
from tkinter import ttk, messagebox
import sqlite3
import sys
import os

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –Ω–∞—à–µ–π ERP —Å–∏—Å—Ç–µ–º—ã
from database import Database
from login_module import LoginWindow
from users_module import UsersModule
from products_module import ProductsModule
from customers_module import CustomersModule
from enhanced_orders_module import EnhancedOrdersModule
from reports_module import ReportsModule

class ERPMainWindow:
    def __init__(self, current_user):
        self.current_user = current_user
        self.root = tk.Tk()
        self.root.title(f"ERP –°–∏—Å—Ç–µ–º–∞ - {current_user['full_name']} ({current_user['role']})")
        self.root.geometry("1000x700")
        self.root.configure(bg='#f0f0f0')
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        self.db = Database()
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –º–æ–¥—É–ª—è
        self.current_module_frame = None
        
        self.create_widgets()
        
    def create_widgets(self):
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.create_menu()
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.create_user_panel()
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title_frame = tk.Frame(self.root, bg='#2c3e50', height=80)
        title_frame.pack(fill='x', pady=(0, 10))
        title_frame.pack_propagate(False)
        
        title_label = tk.Label(
            title_frame, 
            text="üè¢ ERP –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ï–î–ü–†–ò–Ø–¢–ò–ï–ú", 
            font=('Arial', 18, 'bold'),
            fg='white',
            bg='#2c3e50'
        )
        title_label.pack(expand=True)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–æ–¥—É–ª–µ–π
        buttons_frame = tk.Frame(self.root, bg='#f0f0f0')
        buttons_frame.pack(fill='x', padx=20, pady=10)
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –º–æ–¥—É–ª–µ–π —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.create_module_buttons(buttons_frame)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –º–æ–¥—É–ª–µ–π
        self.content_frame = tk.Frame(self.root, bg='white', relief='sunken', bd=2)
        self.content_frame.pack(fill='both', expand=True, padx=20, pady=(0, 20))
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.show_welcome_message()
        
    def create_user_panel(self):
        """–°–æ–∑–¥–∞—Ç—å –ø–∞–Ω–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        user_frame = tk.Frame(self.root, bg='#34495e', height=40)
        user_frame.pack(fill='x')
        user_frame.pack_propagate(False)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = tk.Label(
            user_frame,
            text=f"üë§ {self.current_user['full_name']} | {self.current_user['role']} | {self.current_user['email']}",
            font=('Arial', 10),
            bg='#34495e',
            fg='white'
        )
        user_info.pack(side='left', padx=20, pady=10)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        logout_btn = tk.Button(
            user_frame,
            text="üö™ –í—ã–π—Ç–∏",
            command=self.logout,
            bg='#e74c3c',
            fg='white',
            font=('Arial', 9, 'bold'),
            relief='flat',
            cursor='hand2'
        )
        logout_btn.pack(side='right', padx=20, pady=5)
        
        # –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ
        import datetime
        current_time = datetime.datetime.now().strftime('%d.%m.%Y %H:%M')
        time_label = tk.Label(
            user_frame,
            text=f"üïê –í—Ä–µ–º—è: {current_time}",
            font=('Arial', 9),
            bg='#34495e',
            fg='#bdc3c7'
        )
        time_label.pack(side='right', padx=20, pady=10)
        
    def create_module_buttons(self, parent):
        """–°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –º–æ–¥—É–ª–µ–π —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        if self.current_user['role'] == '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä':
            modules = [
                ("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", self.open_users_module, '#3498db'),
                ("üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", self.open_products_module, '#27ae60'),
                ("üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏", self.open_customers_module, '#e67e22'),
                ("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏", self.open_orders_module, '#9b59b6'),
                ("üìä –û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", self.open_reports_module, '#34495e'),
                ("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã", self.open_settings_module, '#95a5a6')
            ]
        elif self.current_user['role'] == '–ú–µ–Ω–µ–¥–∂–µ—Ä':
            modules = [
                ("üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", self.open_products_module, '#27ae60'),
                ("üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏", self.open_customers_module, '#e67e22'),
                ("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏", self.open_orders_module, '#9b59b6'),
                ("üìä –û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", self.open_reports_module, '#34495e')
            ]
        else:  # –û–ø–µ—Ä–∞—Ç–æ—Ä
            modules = [
                ("üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏", self.open_customers_module, '#e67e22'),
                ("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏", self.open_orders_module, '#9b59b6'),
                ("üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤", self.open_reports_module, '#34495e')
            ]
        
        for i, (text, command, color) in enumerate(modules):
            btn = tk.Button(
                parent,
                text=text,
                command=command,
                font=('Arial', 12, 'bold'),
                bg=color,
                fg='white',
                relief='flat',
                cursor='hand2',
                width=25,
                height=2
            )
            row = i // 3
            col = i % 3
            btn.grid(row=row, column=col, padx=10, pady=5, sticky='ew')
            
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–µ—Ç–∫—É
        for i in range(3):
            parent.grid_columnconfigure(i, weight=1)
        
    def create_menu(self):
        menubar = tk.Menu(self.root)
        self.root.config(menu=menubar)
        
        # –ú–µ–Ω—é "–§–∞–π–ª"
        file_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–§–∞–π–ª", menu=file_menu)
        file_menu.add_command(label="üè† –ì–ª–∞–≤–Ω–∞—è", command=self.show_welcome_message)
        file_menu.add_separator()
        file_menu.add_command(label="üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è", command=self.create_backup)
        file_menu.add_command(label="üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", command=self.export_data)
        file_menu.add_separator()
        file_menu.add_command(label="üö™ –í—ã—Ö–æ–¥", command=self.logout)
        
        # –ú–µ–Ω—é "–ú–æ–¥—É–ª–∏"
        modules_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–ú–æ–¥—É–ª–∏", menu=modules_menu)
        
        if self.current_user['role'] == '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä':
            modules_menu.add_command(label="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", command=self.open_users_module)
        if self.current_user['role'] in ['–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', '–ú–µ–Ω–µ–¥–∂–µ—Ä']:
            modules_menu.add_command(label="üì¶ –¢–æ–≤–∞—Ä—ã", command=self.open_products_module)
        modules_menu.add_command(label="üë§ –ö–ª–∏–µ–Ω—Ç—ã", command=self.open_customers_module)
        modules_menu.add_command(label="üìã –ó–∞–∫–∞–∑—ã", command=self.open_orders_module)
        modules_menu.add_command(label="üìä –û—Ç—á–µ—Ç—ã", command=self.open_reports_module)
        
        # –ú–µ–Ω—é "–ü–æ–º–æ—â—å"
        help_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–ü–æ–º–æ—â—å", menu=help_menu)
        help_menu.add_command(label="üìñ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", command=self.show_help)
        help_menu.add_command(label="üîç –ü–æ–∏—Å–∫", command=self.show_search)
        help_menu.add_separator()
        help_menu.add_command(label="‚ÑπÔ∏è –û –ø—Ä–æ–≥—Ä–∞–º–º–µ", command=self.show_about)
        
    def show_about(self):
        messagebox.showinfo(
            "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ",
            f"ERP –°–∏—Å—Ç–µ–º–∞ v2.0\n\n–£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ–º\n\n–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {self.current_user['full_name']}\n–†–æ–ª—å: {self.current_user['role']}\n\n–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞\n–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ Python + Tkinter + SQLite"
        )
        
    def show_help(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        help_window = tk.Toplevel(self.root)
        help_window.title("–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        help_window.geometry("600x400")
        help_window.configure(bg='white')
        
        help_text = tk.Text(help_window, wrap='word', font=('Arial', 10))
        help_text.pack(fill='both', expand=True, padx=20, pady=20)
        
        help_content = """
–†–£–ö–û–í–û–î–°–¢–í–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ERP –°–ò–°–¢–ï–ú–´

1. –í–•–û–î –í –°–ò–°–¢–ï–ú–£
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞
   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ú–µ–Ω–µ–¥–∂–µ—Ä, –û–ø–µ—Ä–∞—Ç–æ—Ä

2. –ù–ê–í–ò–ì–ê–¶–ò–Ø
   ‚Ä¢ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é - –≤—ã–±–æ—Ä –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã
   ‚Ä¢ –ü–∞–Ω–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
   ‚Ä¢ –ö–Ω–æ–ø–∫–∏ –º–æ–¥—É–ª–µ–π - –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º

3. –ú–û–î–£–õ–ò –°–ò–°–¢–ï–ú–´

–£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò (—Ç–æ–ª—å–∫–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä):
   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–ê–ú–ò (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ú–µ–Ω–µ–¥–∂–µ—Ä):
   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥
   ‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
   ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ

–£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê–ú–ò:
   ‚Ä¢ –í–µ–¥–µ–Ω–∏–µ –±–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
   ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π

–£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê–ú–ò:
   ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤
   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤
   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏—è–º–∏ –∑–∞–∫–∞–∑–æ–≤

–û–¢–ß–ï–¢–´ –ò –ê–ù–ê–õ–ò–¢–ò–ö–ê:
   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã
   ‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂
   ‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö

4. –ì–û–†–Ø–ß–ò–ï –ö–õ–ê–í–ò–®–ò
   ‚Ä¢ F5 - –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
   ‚Ä¢ Ctrl+N - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
   ‚Ä¢ Delete - –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
   ‚Ä¢ Ctrl+F - –ü–æ–∏—Å–∫

5. –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨
   ‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –º–µ–Ω—è–π—Ç–µ –ø–∞—Ä–æ–ª–∏
   ‚Ä¢ –í—ã—Ö–æ–¥–∏—Ç–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã
   ‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        """
        
        help_text.insert('1.0', help_content)
        help_text.config(state='disabled')
        
    def show_search(self):
        """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ —Å–∏—Å—Ç–µ–º–µ"""
        search_window = tk.Toplevel(self.root)
        search_window.title("–ü–æ–∏—Å–∫ –ø–æ —Å–∏—Å—Ç–µ–º–µ")
        search_window.geometry("500x400")
        search_window.configure(bg='white')
        
        # –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
        search_frame = tk.Frame(search_window, bg='white')
        search_frame.pack(fill='x', padx=20, pady=10)
        
        tk.Label(search_frame, text="–ü–æ–∏—Å–∫:", font=('Arial', 12, 'bold'), bg='white').pack(anchor='w')
        
        search_var = tk.StringVar()
        search_entry = tk.Entry(search_frame, textvariable=search_var, font=('Arial', 11), width=40)
        search_entry.pack(fill='x', pady=5)
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
        results_frame = tk.Frame(search_window, bg='white')
        results_frame.pack(fill='both', expand=True, padx=20, pady=10)
        
        tk.Label(results_frame, text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:", font=('Arial', 12, 'bold'), bg='white').pack(anchor='w')
        
        results_tree = ttk.Treeview(results_frame, columns=('–¢–∏–ø', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–û–ø–∏—Å–∞–Ω–∏–µ'), show='headings')
        results_tree.heading('–¢–∏–ø', text='–¢–∏–ø')
        results_tree.heading('–ù–∞–∑–≤–∞–Ω–∏–µ', text='–ù–∞–∑–≤–∞–Ω–∏–µ')
        results_tree.heading('–û–ø–∏—Å–∞–Ω–∏–µ', text='–û–ø–∏—Å–∞–Ω–∏–µ')
        results_tree.pack(fill='both', expand=True, pady=5)
        
        def perform_search():
            query = search_var.get().strip().lower()
            if not query:
                return
                
            # –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            for item in results_tree.get_children():
                results_tree.delete(item)
                
            # –ü–æ–∏—Å–∫ –≤ —Ç–æ–≤–∞—Ä–∞—Ö
            products = self.db.get_all_products()
            for product in products:
                if query in product[1].lower() or query in (product[2] or '').lower():
                    results_tree.insert('', 'end', values=('–¢–æ–≤–∞—Ä', product[1], product[2]))
                    
            # –ü–æ–∏—Å–∫ –≤ –∫–ª–∏–µ–Ω—Ç–∞—Ö
            customers = self.db.get_all_customers()
            for customer in customers:
                if query in customer[1].lower():
                    results_tree.insert('', 'end', values=('–ö–ª–∏–µ–Ω—Ç', customer[1], customer[2]))
                    
        search_btn = tk.Button(
            search_frame,
            text="üîç –ù–∞–π—Ç–∏",
            command=perform_search,
            bg='#3498db',
            fg='white',
            font=('Arial', 10, 'bold'),
            relief='flat'
        )
        search_btn.pack(pady=5)
        
        search_entry.bind('<Return>', lambda e: perform_search())
        
    def create_backup(self):
        """–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        import shutil
        import datetime
        
        try:
            timestamp = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
            backup_name = f"erp_backup_{timestamp}.db"
            shutil.copy2("erp_database.db", backup_name)
            messagebox.showinfo("–£—Å–ø–µ—Ö", f"–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_name}")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: {e}")
            
    def export_data(self):
        """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ CSV"""
        try:
            import csv
            import datetime
            
            timestamp = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
            
            # –≠–∫—Å–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤
            with open(f'products_export_{timestamp}.csv', 'w', newline='', encoding='utf-8') as file:
                writer = csv.writer(file)
                writer.writerow(['ID', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–û–ø–∏—Å–∞–Ω–∏–µ', '–¶–µ–Ω–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è'])
                products = self.db.get_all_products()
                for product in products:
                    writer.writerow(product[:-1])  # –ò—Å–∫–ª—é—á–∞–µ–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è
                    
            messagebox.showinfo("–£—Å–ø–µ—Ö", f"–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–∞–π–ª products_export_{timestamp}.csv")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ: {e}")
        
    def show_welcome_message(self):
        self.clear_content_frame()
        
        welcome_frame = tk.Frame(self.content_frame, bg='white')
        welcome_frame.pack(fill='both', expand=True)
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        welcome_label = tk.Label(
            welcome_frame,
            text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ERP —Å–∏—Å—Ç–µ–º—É, {self.current_user['full_name']}!",
            font=('Arial', 18, 'bold'),
            bg='white',
            fg='#2c3e50'
        )
        welcome_label.pack(pady=30)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª–∏
        role_info = {
            '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä': "–£ –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–æ–¥—É–ª—è–º —Å–∏—Å—Ç–µ–º—ã",
            '–ú–µ–Ω–µ–¥–∂–µ—Ä': "–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ç–æ–≤–∞—Ä–∞–º–∏, –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏",
            '–û–ø–µ—Ä–∞—Ç–æ—Ä': "–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–±–æ—Ç–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏"
        }
        
        role_label = tk.Label(
            welcome_frame,
            text=f"–í–∞—à–∞ —Ä–æ–ª—å: {self.current_user['role']}\n{role_info[self.current_user['role']]}",
            font=('Arial', 12),
            bg='white',
            fg='#7f8c8d',
            justify='center'
        )
        role_label.pack(pady=10)
        
        # –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_frame = tk.Frame(welcome_frame, bg='white')
        stats_frame.pack(pady=30)
        
        tk.Label(
            stats_frame,
            text="üìä –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:",
            font=('Arial', 14, 'bold'),
            bg='white',
            fg='#2c3e50'
        ).pack(pady=10)
        
        stats_text = f"""
üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂: {self.db.get_total_sales():.2f} ‚ÇΩ
üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: {self.db.get_total_products()}
üë• –ö–ª–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {self.db.get_total_customers()}
üìã –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {self.db.get_total_orders()}
        """
        
        tk.Label(
            stats_frame,
            text=stats_text,
            font=('Arial', 11),
            bg='white',
            fg='#34495e',
            justify='left'
        ).pack()
        
    def clear_content_frame(self):
        for widget in self.content_frame.winfo_children():
            widget.destroy()
            
    def open_users_module(self):
        if self.current_user['role'] != '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä':
            messagebox.showwarning("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –º–æ–¥—É–ª—é!")
            return
        self.clear_content_frame()
        self.current_module = UsersModule(self.content_frame, self.db)
        
    def open_products_module(self):
        if self.current_user['role'] not in ['–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', '–ú–µ–Ω–µ–¥–∂–µ—Ä']:
            messagebox.showwarning("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –º–æ–¥—É–ª—é!")
            return
        self.clear_content_frame()
        self.current_module = ProductsModule(self.content_frame, self.db)
        
    def open_customers_module(self):
        self.clear_content_frame()
        self.current_module = CustomersModule(self.content_frame, self.db)
        
    def open_orders_module(self):
        self.clear_content_frame()
        self.current_module = EnhancedOrdersModule(self.content_frame, self.db)
        
    def open_reports_module(self):
        self.clear_content_frame()
        self.current_module = ReportsModule(self.content_frame, self.db)
        
    def open_settings_module(self):
        if self.current_user['role'] != '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä':
            messagebox.showwarning("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º!")
            return
        messagebox.showinfo("–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", "–ú–æ–¥—É–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        
    def logout(self):
        """–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
        if messagebox.askyesno("–í—ã—Ö–æ–¥", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã?"):
            self.root.destroy()
            
    def run(self):
        self.root.mainloop()

def start_application(current_user):
    """–ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    app = ERPMainWindow(current_user)
    app.run()

def main():
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db = Database()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        login_window = LoginWindow(db, start_application)
        user = login_window.run()
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è, –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
        if not user:
            sys.exit()
            
    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã: {e}")
        
if __name__ == "__main__":
    main() 